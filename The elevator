#coding gbk
#综合分析：
#首先，假设该建筑共有1到20楼，同时将特殊的14和18楼都包含在内
#为了保证用户能够多次输入，反复测试，在外围必须有一个while循环
    #注：while一定得有结束循环的设置
#因为不同楼层情况不同，而且考虑到还有用户输入字母、乱码的可能性，应该要用到if判断语句
#一定要有对用户输入的限制
    #注：输入错误时，应该报错，并且提醒用户输入正确内容
#记得不要忽略对节点数字的处理，即14与18两个整数

#楼层判断分析
#如果用户想去1到13楼，则输入即为输出
#如果用户想去14到16楼，因为没有14楼和18楼，即两者都无法输入，
    #所以此时输入的楼层比实际到达的楼层加一层，即输出为输入-1
#如果用户想去17到20楼，因为没有14楼和18楼，所以中间空出两个楼层，
    #所以此时输入的楼层比实际到达的楼层加两层，即输出为输入-2

floor=input("请输入想要到达的楼层：")
bingo=False
#假设该建筑共有1到20楼
while bingo==False:
    if floor.isdigit():#判断用户输入的是否是整数
        floor=int(floor)
        if 0 < floor < 14:  # 如果楼层在1到13层之间
            print(floor)  # 直接输出楼层输入的数字
        elif 14 < floor < 18:  # 如果楼层在14到16层之间
            print(floor - 1)  # 输出用户输入的数字-1
        elif 18 < floor < 23:  # 如果楼层在17到20层之间
            print(floor - 2)  # 输出用户输入的数字-2

        else:
            print("error,请输入1到22之间非14和18的整数，谢谢！")#报错，提醒用户输入恰当范围内的数字

    else:
        print("error,请输入整数,谢谢")#报错并提醒用户输入整数
    floor=input("请输入想要到达的楼层：")
    #因为在第一个if语句中将floor定义为了整型，所以此时再次输入，取消对整型的限制，否则无法通过第一个if的isdigit判断条件

else:
    bingo=True
